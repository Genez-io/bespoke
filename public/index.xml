<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bespoke Diet Generator API</title>
    <link>https://razvanperial.github.io/</link>
    <description>Recent content on Bespoke Diet Generator API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://razvanperial.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://razvanperial.github.io/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/documentation/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Frequently asked questions</title>
      <link>https://razvanperial.github.io/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/faq/</guid>
      <description>Question 1 Question 2 Question 3 Question 4 Question 1 Answer 1 Question 2 Answer 2
Question 3 Answer 3
Question 4 Answer 4</description>
    </item>
    
    <item>
      <title>Tutorial</title>
      <link>https://razvanperial.github.io/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/tutorial/</guid>
      <description> » Part 1: How to generate your own diets using NodeJS » Part 2: How to configure the diet and replace ingredients » Part 3: How to handle errors </description>
    </item>
    
    <item>
      <title>Tutorial - Part 1: How to generate your own diets using NodeJS</title>
      <link>https://razvanperial.github.io/how-to-generate-your-own-diets-using-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/how-to-generate-your-own-diets-using-nodejs/</guid>
      <description>Introduction In this part, we will cover how to create a simple command line utility that generates diets. The program will be written in NodeJS. Let’s start!
Prerequisites For this tutorial, we are going to use NodeJS and npm. Here you can find a tutorial on how to install them.
Setup Initialize a new project using npm init. Set the name of the project “DietGenerator” and all the other fields are optional and can be skipped by pressing Enter (however, for a production application, it is advisable to set all the fields accordingly).</description>
    </item>
    
    <item>
      <title>Tutorial - Part 2: How to configure the diet and replace ingredients</title>
      <link>https://razvanperial.github.io/how-to-configure-the-diet-and-replace-ingredients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/how-to-configure-the-diet-and-replace-ingredients/</guid>
      <description>Introduction In the previous tutorial, we have seen how to create an user and how to generate a diet for them. If you haven’t done it, check it out here. Let’s say that we want to configure the diets to be according to the user’s taste. How do we do this? Or maybe the user has some allergies and they would prefer to avoid some ingredients. The good news is that CraveAPI offers support for customizing diets!</description>
    </item>
    
    <item>
      <title>Tutorial - Part 3: How to handle errors</title>
      <link>https://razvanperial.github.io/how-to-handle-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://razvanperial.github.io/how-to-handle-errors/</guid>
      <description>Introduction Sometimes APIs can fail because of multiple reasons. One of them is that the input that we pass to the API is invalid. With CraveAPI we return errors in a standardize way such that it is easy to see what the reason of the failure. Let’s see how errors can be handled with grace. We will show how to handle the errors on our command line utility that we have built in the previous tutorials.</description>
    </item>
    
  </channel>
</rss>
